<?php

namespace Tests\Feature\Admin;

use App\Models\Terms;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Schema;
use Tests\TestCase;

class TermsTest extends TestCase
{
    use RefreshDatabase;

    private $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->artisan('migrate');
        $this->user = User::factory()->create();
    }

    protected function tearDown(): void
    {
        Schema::disableForeignKeyConstraints();
        Terms::truncate();
        User::truncate();
        Schema::enableForeignKeyConstraints();

        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function test_terms_create()
    {
        $response = $this->actingAs($this->user)->post(route('admin.terms.store'), [
            'path'    => 'agreements',
            'title'   => 'Terms Title',
            'content' => 'Terms Content',
        ]);

        $terms = Terms::first();

        $response->assertRedirect(route('admin.terms.show', $terms->id));
    }

    public function test_terms_show()
    {
        $this->actingAs($this->user)->post(route('admin.terms.store'), [
            'path'    => 'agreements',
            'title'   => 'Terms Title',
            'content' => 'Terms Content',
        ]);

        $terms = Terms::first();

        $response = $this->actingAs($this->user)->get(route('admin.terms.show', $terms->id));

        $response->assertStatus(200);
        $response->assertSee($terms->path);
        $response->assertSee($terms->title);
    }
}
